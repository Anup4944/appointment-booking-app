{"version":3,"file":"static/js/765.4f80fd1b.chunk.js","mappings":"sOAiEA,EAzDsB,WACpB,IAAQA,GAAUC,EAAAA,EAAAA,MAAVD,MACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAA8CF,EAAAA,EAAAA,UAAS,IAAG,eAAnDG,EAAe,KAAEC,EAAkB,KACpCC,GAAWC,EAAAA,EAAAA,MAEjB,GAA+BC,EAAAA,EAAAA,KAC7B,SAACC,GAAK,OAAKA,EAAMC,sBAAsB,IADjCC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QASnB,OAAOD,GACL,SAAC,KAAO,KAER,0BACE,0BACE,kBAAME,QAAQ,sBAAsBC,SAVX,SAACC,GAC9BA,EAAEC,iBACFV,GAASW,EAAAA,EAAAA,IAAoBlB,EAAOG,EAAUE,GAChD,EAO2E,UAClEQ,IAAW,wBAAKA,KAEjB,4BACE,2BACE,SAAC,MAAa,MACR,KACR,kBACEM,KAAK,WACLC,YAAY,0BACZC,UAAQ,EACRC,KAAK,WACLC,MAAOpB,EACPqB,SAAU,SAACR,GAAC,OAAKZ,EAAYY,EAAES,OAAOF,MAAM,QAGhD,4BACE,2BACE,SAAC,MAAa,MACR,KACR,kBACEJ,KAAK,WACLC,YAAY,mBACZC,UAAQ,EACRC,KAAK,WACLC,MAAOlB,EACPmB,SAAU,SAACR,GAAC,OAAKV,EAAmBU,EAAES,OAAOF,MAAM,QAGvD,mBAAQJ,KAAK,SAAQ,oBACrB,cAAGO,KAAK,IAAG,iCAKrB,C","sources":["components/advisor/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { AiOutlineLock } from \"react-icons/ai\";\r\nimport \"../../styles/resetPassword.scss\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { resetPasswordAction } from \"../../redux/actions/Advisor\";\r\nimport { Loading } from \"..\";\r\n\r\nconst ResetPassword = () => {\r\n  const { token } = useParams();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const { isLoading, message } = useSelector(\r\n    (state) => state.recoverPasswordReducer\r\n  );\r\n\r\n  const handleOnRegisterSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(resetPasswordAction(token, password, confirmPassword));\r\n  };\r\n\r\n  return isLoading ? (\r\n    <Loading />\r\n  ) : (\r\n    <div>\r\n      <div>\r\n        <form encType=\"multipart/form-data\" onSubmit={handleOnRegisterSubmit}>\r\n          {message && <h3>{message}</h3>}\r\n\r\n          <div>\r\n            <span>\r\n              <AiOutlineLock />\r\n            </span>{\" \"}\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter your new password\"\r\n              required\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <span>\r\n              <AiOutlineLock />\r\n            </span>{\" \"}\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              required\r\n              name=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Reset</button>\r\n          <a href=\"/\">Back to login</a>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"names":["token","useParams","useState","password","setPassword","confirmPassword","setConfirmPassword","dispatch","useDispatch","useSelector","state","recoverPasswordReducer","isLoading","message","encType","onSubmit","e","preventDefault","resetPasswordAction","type","placeholder","required","name","value","onChange","target","href"],"sourceRoot":""}